import socket, timeBUFFER_SIZE = 1024LOCAL_HOST = "127.0.0.1"PORT_TO_SERVER = 2510class Client(object):    """This class defines client's methods and params"""    def __init__(self, user_name: str):        """        This method initiate client object with those params:        @param user_name: the user name of the client :str        """        self.user_name = user_name        self.client_socket = socket.socket()    def receive_data_from_client(self):        """ Getting from client message """        data = self.client_socket.recv(BUFFER_SIZE)        print(data.decode())    def send_data_to_room(self):        """        The method sends message to the room from the client, after encoding and converting to bytes        @param message_to_send: the message that we want to send :str        """        message_to_send = self.user_name + input()        self.client_socket.send(bytes(message_to_send.encode()))    def login(self):        self.client_socket.connect((LOCAL_HOST, PORT_TO_SERVER))        self.client_socket.send(bytes(self.user_name.encode()))        choice = input(self.client_socket.recv(BUFFER_SIZE).decode())        self.client_socket.send(bytes(choice.encode()))        if choice == "1":            room_id = input(self.client_socket.recv(BUFFER_SIZE).decode())            self.client_socket.send(bytes(room_id.encode()))        elif choice == "2":            print(self.client_socket.recv(BUFFER_SIZE).decode())            chosen_room = input("To which room you would like to enter?")            self.client_socket.send(bytes(chosen_room.encode()))        else:            print("Value error! {} isn't in the options".format(choice))            exit()def main():    client_instance = Client("Amit Nahmias")    client_instance.login()if __name__ == '__main__':    main()# def enter_to_room(self, port: str):#     """#     Joining the user to room.#     @param port: the port of the room that the user wanna join to :str#     """#     self.client_socket.close()#     self.client_socket = socket.socket()#     self.client_socket.connect((LOCAL_HOST, int(port)))#     self.client_socket.send(bytes(self.user_name.encode()))#     print("Dear {}, \nWelcome to room number {}".format(self.user_name, port))# def leave_room(self):#     """ This method gives to the user the option to leave the room that he is connected to """#     verify = input("For disconnecting replay yes: ")#     if verify == "yes":#         self.client_socket.close()#     else:#         pass